// _____ _____ _____  _                       
// |  __ \_   _|  __ \| |                      
// | |__) || | | |  | | |     ___   ___  _ __  
// |  ___/ | | | |  | | |    / _ \ / _ \|  _ \
// | |    _| |_| |__| | |___| (_) | (_) | |_) |
// |_|   |_____|_____/|______\___/ \___/| .__/ 
// https://git.psi.ch/hipa_apps/pidloop |_|    
//                                      
// This calss can read .reg files and convert the
// xml data inside of them to a Config struct instance.
// It can read every .reg configuration generated by it or
// the previous version of this program reg2d. But this 
// program changes the format of the files so they are no
// longer backwards compatible.
// This class uses the one-file library tinyxml2 from the file
// src/logic/xml_parser.h
//
// @Author: Adam Koprek
// @Maintainer: Jochem Snuverink

#pragma once
#include <string>

#include "config.h"
#include "xml_parser.h"


class ConfigParser {
public:
    /************************************************************
    *                       functions
    ************************************************************/

    // Constructor
    ConfigParser();

    // Deconstructor
    ~ConfigParser();

    // Load config from file
    // @param file path
    // @return 0 if operation successfull
    int load_config(std::string file_path);
    
    // Save config to a given path
    // @param file path
    // @return 0 if operation successfull
    int save_config(std::string file_path);

    // Parse loaded config into a Config struct
    // @param pointer to Config* struct where to write the data
    // @return 0 if operation successfull
    int parse_config(Config* config);

    // Dump infirmation from a Config* instance in the new format (but still xml)
    // @param pointer to Config* struct
    void dump(Config* config);

private:
    /************************************************************
    *                       members
    ************************************************************/

    tinyxml2::XMLDocument* m_file = nullptr;        // tinyxml2 file that converts to xml
};
